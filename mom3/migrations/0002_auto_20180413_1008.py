# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-04-13 08:08
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mom3', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataproduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('indexid', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('type', models.CharField(max_length=20)),
                ('released', models.IntegerField()),
                ('exported', models.IntegerField(blank=True, null=True)),
                ('fileformat', models.CharField(blank=True, max_length=50, null=True)),
                ('archived', models.IntegerField(blank=True, null=True)),
                ('pipelined', models.IntegerField(blank=True, null=True)),
                ('topology', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('placeholder', models.IntegerField(blank=True, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('message', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'dataproduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataproductLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True)),
                ('cluster_name', models.CharField(blank=True, max_length=20, null=True)),
                ('cluster_partition', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'dataproduct_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dataproducttext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dataproducttext',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Export',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exportid', models.IntegerField(blank=True, null=True)),
                ('nr_dataproducts', models.IntegerField(blank=True, null=True)),
                ('nr_ingested', models.IntegerField(blank=True, null=True)),
                ('nr_aborted', models.IntegerField(blank=True, null=True)),
                ('percentage_ingested', models.IntegerField(blank=True, null=True)),
                ('nr_source_location', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'export',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarAntennafield',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('station_id', models.IntegerField(blank=True, null=True)),
                ('location_id', models.IntegerField(blank=True, null=True)),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_antennafield',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarAveragingPipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mom2objectid', models.IntegerField(blank=True, null=True)),
                ('flagging_strategy', models.CharField(blank=True, max_length=50, null=True)),
                ('frequency_integration_step', models.IntegerField(blank=True, null=True)),
                ('time_integration_step', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_averaging_pipeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarBbsParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baselines', models.CharField(blank=True, max_length=100, null=True)),
                ('correlations', models.CharField(blank=True, max_length=100, null=True)),
                ('beam_model_enable', models.IntegerField(blank=True, null=True)),
                ('solve_parms', models.CharField(blank=True, max_length=100, null=True)),
                ('solve_uvrange', models.CharField(blank=True, max_length=100, null=True)),
                ('strategy_baselines', models.CharField(blank=True, max_length=40, null=True)),
                ('strategy_timerange', models.CharField(blank=True, max_length=100, null=True)),
                ('lofar_pipeline_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_bbs_parameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarBeamMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_targetname', models.CharField(max_length=100)),
                ('spec_ra', models.FloatField(blank=True, null=True)),
                ('spec_decl', models.FloatField(blank=True, null=True)),
                ('spec_equinox', models.CharField(blank=True, max_length=10, null=True)),
                ('spec_duration', models.FloatField(blank=True, null=True)),
                ('spec_sub_central_frequency', models.FloatField(blank=True, null=True)),
                ('spec_sub_bandwidth', models.FloatField(blank=True, null=True)),
                ('spec_sub_contiguous', models.IntegerField(blank=True, null=True)),
                ('spec_sub_custom_subbands', models.IntegerField(blank=True, null=True)),
                ('spec_sub_subbands', models.TextField(blank=True, null=True)),
                ('ra', models.FloatField(blank=True, null=True)),
                ('decl', models.FloatField(blank=True, null=True)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('endtime', models.DateTimeField(blank=True, null=True)),
                ('equinox', models.CharField(blank=True, max_length=10, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('central_frequency', models.FloatField(blank=True, null=True)),
                ('bandwidth', models.FloatField(blank=True, null=True)),
                ('subbands', models.TextField(blank=True, null=True)),
                ('measurement_type', models.CharField(max_length=20)),
                ('maximize_duration', models.IntegerField(blank=True, null=True)),
                ('spec_maximize_duration', models.IntegerField(blank=True, null=True)),
                ('ocd', models.IntegerField(blank=True, null=True)),
                ('spec_ocd', models.IntegerField(blank=True, null=True)),
                ('flyseye', models.IntegerField(blank=True, null=True)),
                ('tab_nr_rings', models.IntegerField(blank=True, null=True)),
                ('tab_ring_size', models.FloatField(blank=True, null=True)),
                ('spec_flyseye', models.IntegerField(blank=True, null=True)),
                ('spec_tab_nr_rings', models.IntegerField(blank=True, null=True)),
                ('spec_tab_ring_size', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_beam_measurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarCalibrationPipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skymodel', models.CharField(blank=True, max_length=50, null=True)),
                ('zerophase', models.IntegerField(blank=True, null=True)),
                ('flagging_strategy', models.CharField(blank=True, max_length=50, null=True)),
                ('frequency_integration_step', models.IntegerField(blank=True, null=True)),
                ('time_integration_step', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_calibration_pipeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarCluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mom2objectid', models.IntegerField(blank=True, null=True)),
                ('used_for', models.CharField(blank=True, max_length=20, null=True)),
                ('cluster_name', models.CharField(blank=True, max_length=20, null=True)),
                ('cluster_partition', models.CharField(blank=True, max_length=80, null=True)),
                ('nr_of_tasks', models.IntegerField(blank=True, null=True)),
                ('nr_of_cores_per_task', models.IntegerField(blank=True, null=True)),
                ('min_ram_per_task', models.FloatField(blank=True, null=True)),
                ('min_scratch_per_task', models.FloatField(blank=True, null=True)),
                ('max_duration_per_task', models.FloatField(blank=True, null=True)),
                ('run_simultaneous', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_cluster',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarDataproduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mom2_dp_id', models.IntegerField()),
                ('storage_ticket', models.CharField(blank=True, max_length=255, null=True)),
                ('filesize', models.BigIntegerField(blank=True, null=True)),
                ('subband', models.IntegerField(blank=True, null=True)),
                ('subband_index', models.IntegerField(blank=True, null=True)),
                ('central_frequency', models.FloatField(blank=True, null=True)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('channel_width', models.FloatField(blank=True, null=True)),
                ('number_of_channels', models.IntegerField(blank=True, null=True)),
                ('integration_interval', models.FloatField(blank=True, null=True)),
                ('sap', models.IntegerField(blank=True, db_column='SAP', null=True)),
                ('index_in_parset', models.IntegerField(blank=True, null=True)),
                ('percentage_written', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('archive_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_dataproduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarDataproductChecksum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(blank=True, max_length=15, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'lofar_dataproduct_checksum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarDemixingParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lofar_pipeline_id', models.IntegerField(blank=True, null=True)),
                ('demix_freqstep', models.IntegerField(blank=True, null=True)),
                ('demix_timestep', models.IntegerField(blank=True, null=True)),
                ('averager_freqstep', models.IntegerField(blank=True, null=True)),
                ('averager_timestep', models.IntegerField(blank=True, null=True)),
                ('ignore_target', models.IntegerField(blank=True, null=True)),
                ('demix_always', models.CharField(blank=True, max_length=255, null=True)),
                ('demix_if_needed', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'lofar_demixing_parameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarFolder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contains_aborted_pipelines', models.IntegerField(blank=True, null=True)),
                ('contains_finished_pipelines', models.IntegerField(blank=True, null=True)),
                ('contains_aborted_observations', models.IntegerField(blank=True, null=True)),
                ('contains_finished_observations', models.IntegerField(blank=True, null=True)),
                ('contains_calibrators', models.IntegerField(blank=True, null=True)),
                ('contains_targets', models.IntegerField(blank=True, null=True)),
                ('extra_feedback', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'lofar_folder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarGenericMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_duration', models.FloatField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_generic_measurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarImagingParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lofar_pipeline_id', models.IntegerField(blank=True, null=True)),
                ('field_of_view', models.FloatField(blank=True, null=True)),
                ('weight', models.CharField(blank=True, max_length=20, null=True)),
                ('robust', models.FloatField(blank=True, null=True)),
                ('iterations', models.IntegerField(blank=True, null=True)),
                ('threshold', models.CharField(blank=True, max_length=20, null=True)),
                ('uv_min', models.FloatField(blank=True, null=True)),
                ('uv_max', models.FloatField(blank=True, null=True)),
                ('stokes', models.CharField(blank=True, max_length=4, null=True)),
                ('nr_of_slices', models.IntegerField(blank=True, null=True)),
                ('subbands_per_image', models.IntegerField(blank=True, null=True)),
                ('max_baseline', models.IntegerField(blank=True, null=True)),
                ('specify_fov', models.IntegerField(blank=True, null=True)),
                ('cellsize', models.CharField(blank=True, max_length=20, null=True)),
                ('npix', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_imaging_parameters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarImagingPipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mom2objectid', models.IntegerField(blank=True, null=True)),
                ('nr_of_slices', models.IntegerField(blank=True, null=True)),
                ('subbands_per_image', models.IntegerField(blank=True, null=True)),
                ('imaging_parameters_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_imaging_pipeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarImagingPipelineMsss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nr_of_slices', models.IntegerField(blank=True, null=True)),
                ('subbands_per_image', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_imaging_pipeline_msss',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('coordinate_system', models.CharField(blank=True, max_length=8, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('z', models.FloatField(blank=True, null=True)),
                ('coordinates_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarLongBaselinePipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subbands_per_subbandgroup', models.IntegerField(blank=True, null=True)),
                ('subbandgroups_per_ms', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_long_baseline_pipeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarObservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_id', models.IntegerField(blank=True, null=True)),
                ('instrument', models.CharField(blank=True, max_length=32, null=True)),
                ('default_template', models.CharField(blank=True, max_length=50, null=True)),
                ('tbb_template', models.CharField(blank=True, max_length=50, null=True)),
                ('tbb_piggyback_allowed', models.IntegerField()),
                ('parset', models.TextField(blank=True, null=True)),
                ('nr_output_correlated', models.IntegerField(blank=True, null=True)),
                ('nr_output_beamformed', models.IntegerField(blank=True, null=True)),
                ('nr_output_coherent_stokes', models.IntegerField(blank=True, null=True)),
                ('nr_output_incoherent_stokes', models.IntegerField(blank=True, null=True)),
                ('nr_output_flyseye', models.IntegerField(blank=True, null=True)),
                ('nr_output_correlated_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_beamformed_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_coherent_stokes_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_incoherent_stokes_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_flyseye_valid', models.IntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('aartfaac_piggyback_allowed', models.TextField(blank=True, null=True)),
                ('storage_cluster_id', models.IntegerField(blank=True, null=True)),
                ('processing_cluster_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_observation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarObservationSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=8, null=True)),
                ('correlated_data', models.IntegerField(blank=True, null=True)),
                ('filtered_data', models.IntegerField(blank=True, null=True)),
                ('beamformed_data', models.IntegerField(blank=True, null=True)),
                ('coherent_stokes_data', models.IntegerField(blank=True, null=True)),
                ('incoherent_stokes_data', models.IntegerField(blank=True, null=True)),
                ('antenna', models.CharField(blank=True, max_length=20, null=True)),
                ('clock_mode', models.CharField(blank=True, max_length=10, null=True)),
                ('instrument_filter', models.CharField(blank=True, max_length=15, null=True)),
                ('integration_interval', models.FloatField(blank=True, null=True)),
                ('channels_per_subband', models.IntegerField(blank=True, null=True)),
                ('cn_integration_steps', models.IntegerField(blank=True, null=True)),
                ('pencilbeams_flyseye', models.IntegerField(blank=True, null=True)),
                ('pencilbeams_nr_pencil_rings', models.IntegerField(blank=True, null=True)),
                ('pencilbeams_ring_size', models.FloatField(blank=True, null=True)),
                ('stokes_selection', models.CharField(blank=True, max_length=4, null=True)),
                ('stokes_integrate_channels', models.IntegerField(blank=True, null=True)),
                ('stokes_integration_steps', models.IntegerField(blank=True, null=True)),
                ('station_set', models.CharField(blank=True, max_length=15, null=True)),
                ('timeframe', models.CharField(blank=True, max_length=4, null=True)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('endtime', models.DateTimeField(blank=True, null=True)),
                ('spec_duration', models.FloatField(blank=True, null=True)),
                ('coherent_dedisperse_channels', models.IntegerField(blank=True, null=True)),
                ('dispersion_measure', models.FloatField(blank=True, null=True)),
                ('subbands_per_file_cs', models.IntegerField(blank=True, null=True)),
                ('subbands_per_file_bf', models.IntegerField(blank=True, null=True)),
                ('collapsed_channels_cs', models.IntegerField(blank=True, null=True)),
                ('collapsed_channels_is', models.IntegerField(blank=True, null=True)),
                ('downsampling_steps_cs', models.IntegerField(blank=True, null=True)),
                ('downsampling_steps_is', models.IntegerField(blank=True, null=True)),
                ('which_cs', models.CharField(blank=True, max_length=4, null=True)),
                ('which_is', models.CharField(blank=True, max_length=4, null=True)),
                ('bypass_pff', models.IntegerField(blank=True, null=True)),
                ('enable_superterp', models.IntegerField(blank=True, null=True)),
                ('flyseye', models.IntegerField(blank=True, null=True)),
                ('tab_nr_rings', models.IntegerField(blank=True, null=True)),
                ('tab_ring_size', models.FloatField(blank=True, null=True)),
                ('bits_per_sample', models.IntegerField(blank=True, null=True)),
                ('misc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_observation_specification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarPencilbeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
                ('angle1', models.FloatField(blank=True, null=True)),
                ('angle2', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_pencilbeam',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarPipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('endtime', models.DateTimeField(blank=True, null=True)),
                ('pipeline_id', models.IntegerField(blank=True, null=True)),
                ('pending', models.IntegerField(blank=True, null=True)),
                ('template', models.CharField(blank=True, max_length=100, null=True)),
                ('parset', models.TextField(blank=True, null=True)),
                ('nr_output_correlated', models.IntegerField(blank=True, null=True)),
                ('nr_output_beamformed', models.IntegerField(blank=True, null=True)),
                ('nr_output_instrument_model', models.IntegerField(blank=True, null=True)),
                ('nr_output_skyimage', models.IntegerField(blank=True, null=True)),
                ('nr_output_correlated_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_beamformed_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_instrument_model_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_skyimage_valid', models.IntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('bbs_parameters_id', models.IntegerField(blank=True, null=True)),
                ('storage_cluster_id', models.IntegerField(blank=True, null=True)),
                ('processing_cluster_id', models.IntegerField(blank=True, null=True)),
                ('misc', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_pipeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarPulsarPipeline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_2bf2fits_extra_opts', models.CharField(blank=True, db_column='_2bf2fits_extra_opts', max_length=100, null=True)),
                ('field_8bit_conversion_sigma', models.FloatField(blank=True, db_column='_8bit_conversion_sigma', null=True)),
                ('decode_nblocks', models.IntegerField(blank=True, null=True)),
                ('decode_sigma', models.IntegerField(blank=True, null=True)),
                ('digifil_extra_opts', models.CharField(blank=True, max_length=100, null=True)),
                ('dspsr_extra_opts', models.CharField(blank=True, max_length=100, null=True)),
                ('dynamic_spectrum_time_average', models.FloatField(blank=True, null=True)),
                ('nofold', models.IntegerField(blank=True, null=True)),
                ('nopdmp', models.IntegerField(blank=True, null=True)),
                ('norfi', models.IntegerField(blank=True, null=True)),
                ('prepdata_extra_opts', models.CharField(blank=True, max_length=100, null=True)),
                ('prepfold_extra_opts', models.CharField(blank=True, max_length=100, null=True)),
                ('prepsubband_extra_opts', models.CharField(blank=True, max_length=100, null=True)),
                ('pulsar', models.CharField(blank=True, max_length=100, null=True)),
                ('raw_to_8bit', models.IntegerField(blank=True, null=True)),
                ('rfifind_extra_opts', models.CharField(blank=True, max_length=100, null=True)),
                ('rrats', models.IntegerField(blank=True, null=True)),
                ('single_pulse', models.IntegerField(blank=True, null=True)),
                ('skip_dsps', models.IntegerField(blank=True, null=True)),
                ('skip_dynamic_spectrum', models.IntegerField(blank=True, null=True)),
                ('skip_prepfold', models.IntegerField(blank=True, null=True)),
                ('tsubint', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_pulsar_pipeline',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarSasDefaulttemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sas_id', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('process_type', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_process_type', models.CharField(blank=True, max_length=50, null=True)),
                ('strategy', models.CharField(blank=True, max_length=100, null=True)),
                ('defaults', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_sas_defaulttemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarSpecificationStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'lofar_specification_station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarStation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5)),
                ('station_type', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'lofar_station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processing', models.IntegerField(blank=True, null=True)),
                ('xml', models.TextField(blank=True, null=True)),
                ('suspended', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('mom2objectid', models.IntegerField(blank=True, null=True)),
                ('attempt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarTbbMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_duration', models.FloatField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_tbb_measurement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LofarTiedarraybeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mom2objectid', models.IntegerField(blank=True, null=True)),
                ('indexid', models.IntegerField(blank=True, null=True)),
                ('usr_tab_flyseye', models.IntegerField(blank=True, null=True)),
                ('usr_angle1', models.FloatField(blank=True, null=True)),
                ('usr_angle2', models.FloatField(blank=True, null=True)),
                ('usr_dm', models.FloatField(blank=True, null=True)),
                ('sys_tab_flyseye', models.IntegerField(blank=True, null=True)),
                ('sys_angle1', models.FloatField(blank=True, null=True)),
                ('sys_angle2', models.FloatField(blank=True, null=True)),
                ('sys_dm', models.FloatField(blank=True, null=True)),
                ('usr_coherent', models.IntegerField(blank=True, null=True)),
                ('sys_coherent', models.IntegerField(blank=True, null=True)),
                ('absolute_angles', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lofar_tiedarraybeam',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LtaProject',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'lta_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memberprojectrole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'memberprojectrole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mom2Id',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastassignedmom2id', models.IntegerField()),
            ],
            options={
                'db_table': 'mom2id',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mom2Object',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
                ('mom2id', models.IntegerField(unique=True)),
                ('mom2objecttype', models.CharField(max_length=25)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('topology', models.CharField(blank=True, max_length=100, null=True)),
                ('predecessor', models.CharField(blank=True, max_length=512, null=True)),
                ('topology_parent', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('datasize', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mom2object',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mom2Objectdataproduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mom2objectdataproduct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mom2Objectdataproductreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mom2objectdataproductreference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mom2Objectstatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('roles', models.CharField(blank=True, max_length=255, null=True)),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('indexid', models.IntegerField(blank=True, null=True)),
                ('statustime', models.DateTimeField()),
                ('pending', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mom2objectstatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mom2Objecttext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mom2objecttext',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nonregisteredmember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('affiliation', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'nonregisteredmember',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projectrole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'projectrole',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referencefromid', models.IntegerField(blank=True, null=True)),
                ('referencetoid', models.IntegerField(blank=True, null=True)),
                ('indexid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Registeredmember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registeredmember',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation', models.FloatField(blank=True, null=True)),
                ('used', models.FloatField(blank=True, null=True)),
                ('unit', models.CharField(max_length=20)),
                ('projectpath', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourcesAllocatedSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mom2objectid', models.IntegerField()),
                ('allocated_size', models.IntegerField()),
            ],
            options={
                'db_table': 'resources_allocated_size',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resourcetype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('hosturi', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'resourcetype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('type', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('roles', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField()),
                ('text', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tmp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mom2objectid', models.IntegerField(blank=True, null=True)),
                ('observation_id', models.IntegerField(blank=True, null=True)),
                ('instrument', models.CharField(blank=True, max_length=32, null=True)),
                ('user_specification_id', models.IntegerField(blank=True, null=True)),
                ('system_specification_id', models.IntegerField(blank=True, null=True)),
                ('template', models.CharField(blank=True, max_length=32, null=True)),
                ('default_template', models.CharField(blank=True, max_length=50, null=True)),
                ('tbb_template', models.CharField(blank=True, max_length=50, null=True)),
                ('tbb_piggyback_allowed', models.IntegerField(blank=True, null=True)),
                ('parset', models.TextField(blank=True, null=True)),
                ('nr_output_correlated', models.IntegerField(blank=True, null=True)),
                ('nr_output_beamformed', models.IntegerField(blank=True, null=True)),
                ('nr_output_coherent_stokes', models.IntegerField(blank=True, null=True)),
                ('nr_output_incoherent_stokes', models.IntegerField(blank=True, null=True)),
                ('nr_output_flyseye', models.IntegerField(blank=True, null=True)),
                ('nr_output_correlated_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_beamformed_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_coherent_stokes_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_incoherent_stokes_valid', models.IntegerField(blank=True, null=True)),
                ('nr_output_flyseye_valid', models.IntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('aartfaac_piggyback_allowed', models.TextField(blank=True, null=True)),
                ('storage_cluster_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tmp',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='project',
            options={'managed': False},
        ),
    ]
